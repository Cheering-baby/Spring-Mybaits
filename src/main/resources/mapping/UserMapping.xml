<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springmybatis.mapper.UserMapper">

    <resultMap id="userMap" type="com.example.springmybatis.entity.User">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
        <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    </resultMap>

    <select id="Sel" resultMap="userMap">
        select A.id as id, A.username as username, A.password as password, B.role_code as roleCode, B.role_name as roleName
        from z_user A
        left join z_role B on A.role_code = B.role_code
        where A.id = #{id}
    </select>
    
    <insert id="addUser" parameterType="com.example.springmybatis.entity.User">
      insert into z_user (id, username, password, role_Code) values (#{id}, #{username}, #{password},#{roleCode})
    </insert>

    <update id="updateUser" parameterType="com.example.springmybatis.entity.User">
        update z_user set username=#{username}, password=#{password}, role_code=#{roleCode} where id=#{id}
    </update>

    <delete id="deleteUser">
        delete from z_user where id=#{id}
    </delete>
    
    <select id="getUserLikeByName" parameterType="string" resultMap="userMap">
        select * from z_user where username like  "%"#{value}"%"
    </select>
</mapper>